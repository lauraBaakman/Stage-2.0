#ifndef KERNELS_EPANECHNIKOV_IH_H
#define KERNELS_EPANECHNIKOV_IH_H

#include <math.h>
#ifndef M_PI
#define M_PI           3.14159265358979323846
#endif


#include <gsl/gsl_blas.h>
#include <gsl/gsl_vector_double.h>

#include "epanechnikov.h"


double unitSphereVolume(size_t dimension);
double epanechnikov_constant(size_t dimension);
double normal_unitVarianceConstant(size_t dimension);
double epanechnikov_kernel(gsl_vector *pattern, double constant);

/* Symmetric */
static double normal_pdf(gsl_vector* pattern);
static void normal_prepare(size_t dimension);
static void normal_free();

/* Shape Adaptive */
static void sa_allocate(size_t dimension);
static void sa_computeConstants(gsl_matrix *globalBandwidthMatrix);
double sa_pdf(gsl_vector* pattern, double localBandwidth);
static void sa_free();

static void sa_computeDimensionDependentConstants(size_t dimension);

#endif //KERNELS_EPANECHNIKOV_IH_H
