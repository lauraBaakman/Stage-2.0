#ifndef KERNELS_GAUSSIAN_IH_H
#define KERNELS_GAUSSIAN_IH_H

#include <gsl/gsl_matrix.h>
#include <gsl/gsl_blas.h>
#include <gsl/gsl_linalg.h>

#ifndef M_PI
#define M_PI           3.14159265358979323846
#endif

#include <math.h>

#include "gaussian.h"

double computeStandardGaussianConstant(size_t dimension);

/* Symmetric */
static double normal_pdf(gsl_vector* pattern);
static void normal_prepare(size_t dimension);
static void normal_free();

/* Shape Adaptive */
static void sa_allocate(size_t dimension);
static void sa_computeConstants(gsl_matrix *globalBandwidthMatrix);
static double sa_pdf(gsl_vector *pattern, double localBandwidth);
static void sa_free();

static void sa_computeDimensionDependentConstants(size_t dimension);
#endif //KERNELS_GAUSSIAN_IH_H
